plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
description = 'core'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JSP support
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'javax.servlet:jstl:1.2'

    // MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 오프라인 환경 준비를 위한 task
task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    from configurations.compileClasspath
    into 'libs'
}

task prepareOffline {
    dependsOn copyDependencies
    doLast {
        println "✅ 모든 의존성이 libs 폴더에 복사되었습니다."
        println "📦 오프라인 환경에서는 build.gradle의 repositories를 수정하세요."
    }
}
